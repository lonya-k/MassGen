# Three Agent Notion MCP Test Configuration
# This configuration uses 3 different backends (Gemini, OpenAI, Claude) with Notion MCP capability
# Each agent can create, read, update, and manage Notion pages and databases
#
# Setup Requirements:
# 1. Install Notion MCP server: npm install -g @notionhq/notion-mcp-server
# 2. Create Notion integrations and get tokens (see detailed setup in original config)
# 3. Set environment variables in .env file:
#    NOTION_TOKEN_ONE="your_first_notion_integration_token"
#    NOTION_TOKEN_TWO="your_second_notion_integration_token"
#    NOTION_TOKEN_THREE="your_third_notion_integration_token"
#    OPENAI_API_KEY="your_openai_key"
#    GOOGLE_API_KEY="your_gemini_key"
#    ANTHROPIC_API_KEY="your_claude_key"
#
# Example usage:
# uv run python -m massgen.cli --config configs/three_agents_notion_mcp_test.yaml "Create a comprehensive project management system in Notion with tasks, timelines, and progress tracking. Each agent should contribute to different aspects and verify the setup works."

agents:
  - id: "gemini_notion_agent"
    backend:
      type: "gemini"
      model: "gemini-2.5-flash"
      mcp_servers:
        - name: "notionApi"
          type: "stdio"
          command: "npx"
          args: ["-y", "@notionhq/notion-mcp-server"]
          env:
            NOTION_TOKEN: "${NOTION_TOKEN_ONE}"
          security:
            level: "moderate"
      exclude_tools:
        - post_search  # Exclude problematic tools as noted in original config
    system_message: |
      Available Notion Tools:
      - Notion API integration via MCP
      - Page creation, reading, and updating
      - Database management and querying

  - id: "openai_notion_agent"
    backend:
      type: "openai"
      model: "gpt-4o-mini"
      mcp_servers:
        - name: "notionApi"
          type: "stdio"
          command: "npx"
          args: ["-y", "@notionhq/notion-mcp-server"]
          env:
            NOTION_TOKEN: "${NOTION_TOKEN_TWO}"
          security:
            level: "moderate"
      exclude_tools:
        - post_search
    system_message: |
      Available Notion Tools:
      - Notion API integration via MCP
      - Page creation, reading, and updating
      - Database management and querying

  - id: "claude_notion_agent"
    backend:
      type: "claude_code"
      cwd: "claude_code_workspace_notion_mcp"
      permission_mode: "bypassPermissions"
      mcp_servers:
        notionApi:
          type: "stdio"
          command: "npx"
          args: ["-y", "@notionhq/notion-mcp-server"]
          env:
            NOTION_TOKEN: "${NOTION_TOKEN_THREE}"
      exclude_tools:
        - post_search
    system_message: |
      Available Notion Tools:
      - Notion API integration via MCP
      - Page creation, reading, and updating
      - Database management and querying

ui:
  display_type: "rich_terminal"
  logging_enabled: true

# Coordination Settings
coordination:
  voting_enabled: true
  max_rounds: 3
  consensus_threshold: 0.6
  timeout_seconds: 300
